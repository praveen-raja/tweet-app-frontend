version: 0.2 

phases: 

  pre_build:
    commands:
      - aws --version
      - aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 420738364327.dkr.ecr.us-east-1.amazonaws.com
      - REPOSITORY_URI=420738364327.dkr.ecr.us-east-1.amazonaws.com/tweetapp_frontend
      ##- echo "${DOCKERHUB_PASSWORD}" | docker login -u "${DOCKERHUB_USERNAME}" --password-stdin
      ##- REPOSITORY_URI=https://hub.docker.com/repository/docker/praveenraja16/tweetapp
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=build-$(echo $CODE_BUILD_ID | awk -F":" '{print $2}')
      
  build: 
    commands: 
      - echo ENTERING BUILD PHASE ON `date` 
      - echo "BUILDING DOCKER IMAGE" 
      - docker build -t tweetapp_frontend .
      - docker tag tweetapp_frontend:latest 420738364327.dkr.ecr.us-east-1.amazonaws.com/tweetapp_frontend:latest
      - echo DOCKER IMAGE BUILD SUCCESSFULLY 
     
  post_build: 
    commands: 
      - echo ENTERING POSTBUILD PHASE ON `date`
      - echo "Pushing Docker Image to ECR" 
      - docker push 420738364327.dkr.ecr.us-east-1.amazonaws.com/tweetapp_frontend:latest
      - echo WRITING IMAGE DEFINITIONS FILE 
      - printf '[{"name":"tweetapp_frontend","imageUri":"%s"}]' 420738364327.dkr.ecr.us-east-1.amazonaws.com/tweetapp_frontend:latest > imagedefinitions.json
      - cat imagedefinitions.json
      - echo DOKCER IMAGE PUSHED TO ECR SUCCESSFULLY 
artifacts: 
  files: 
    - imagedefinitions.json